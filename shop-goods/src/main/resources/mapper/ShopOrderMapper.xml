<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.alvin.shop.order.dao.ShopOrderMapper">
  <resultMap id="BaseResultMap" type="org.example.alvin.shop.goods.model.ShopOrder">
    <constructor>
      <idArg column="order_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
      <arg column="user_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
      <arg column="order_status" javaType="java.lang.Byte" jdbcType="TINYINT"/>
      <arg column="pay_status" javaType="java.lang.Byte" jdbcType="TINYINT"/>
      <arg column="shipping_status" javaType="java.lang.Byte" jdbcType="TINYINT"/>
      <arg column="goods_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
      <arg column="goods_number" javaType="java.lang.Integer" jdbcType="INTEGER"/>
      <arg column="coupon_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
      <arg column="coupon_paid" javaType="java.math.BigDecimal" jdbcType="DECIMAL"/>
      <arg column="add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
      <arg column="confirm_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
      <arg column="pay_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    order_id
    , user_id, order_status, pay_status, shipping_status, goods_id, goods_number,
    coupon_id, coupon_paid, add_time, confirm_time, pay_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from shop_order
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete
    from shop_order
    where order_id = #{orderId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.example.alvin.shop.goods.model.ShopOrder">
    insert into shop_order (order_id, user_id, order_status,
                            pay_status, shipping_status, goods_id,
                            goods_number, coupon_id, coupon_paid,
                            add_time, confirm_time, pay_time)
    values (#{orderId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{orderStatus,jdbcType=TINYINT},
            #{payStatus,jdbcType=TINYINT}, #{shippingStatus,jdbcType=TINYINT},
            #{goodsId,jdbcType=BIGINT},
            #{goodsNumber,jdbcType=INTEGER}, #{couponId,jdbcType=BIGINT},
            #{couponPaid,jdbcType=DECIMAL},
            #{addTime,jdbcType=TIMESTAMP}, #{confirmTime,jdbcType=TIMESTAMP},
            #{payTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.example.alvin.shop.goods.model.ShopOrder">
    insert into shop_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="shippingStatus != null">
        shipping_status,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsNumber != null">
        goods_number,
      </if>
      <if test="couponId != null">
        coupon_id,
      </if>
      <if test="couponPaid != null">
        coupon_paid,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="confirmTime != null">
        confirm_time,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="shippingStatus != null">
        #{shippingStatus,jdbcType=TINYINT},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="goodsNumber != null">
        #{goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="couponId != null">
        #{couponId,jdbcType=BIGINT},
      </if>
      <if test="couponPaid != null">
        #{couponPaid,jdbcType=DECIMAL},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmTime != null">
        #{confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective"
    parameterType="org.example.alvin.shop.goods.model.ShopOrder">
    update shop_order
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="shippingStatus != null">
        shipping_status = #{shippingStatus,jdbcType=TINYINT},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="goodsNumber != null">
        goods_number = #{goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="couponId != null">
        coupon_id = #{couponId,jdbcType=BIGINT},
      </if>
      <if test="couponPaid != null">
        coupon_paid = #{couponPaid,jdbcType=DECIMAL},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmTime != null">
        confirm_time = #{confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.alvin.shop.goods.model.ShopOrder">
    update shop_order
    set user_id         = #{userId,jdbcType=BIGINT},
        order_status    = #{orderStatus,jdbcType=TINYINT},
        pay_status      = #{payStatus,jdbcType=TINYINT},
        shipping_status = #{shippingStatus,jdbcType=TINYINT},
        goods_id        = #{goodsId,jdbcType=BIGINT},
        goods_number    = #{goodsNumber,jdbcType=INTEGER},
        coupon_id       = #{couponId,jdbcType=BIGINT},
        coupon_paid     = #{couponPaid,jdbcType=DECIMAL},
        add_time        = #{addTime,jdbcType=TIMESTAMP},
        confirm_time    = #{confirmTime,jdbcType=TIMESTAMP},
        pay_time        = #{payTime,jdbcType=TIMESTAMP}
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
</mapper>