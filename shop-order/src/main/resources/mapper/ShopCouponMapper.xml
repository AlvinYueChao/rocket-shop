<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.alvin.shop.order.dao.ShopCouponMapper">
  <resultMap id="BaseResultMap" type="org.example.alvin.shop.order.model.ShopCoupon">
    <constructor>
      <idArg column="coupon_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
      <arg column="coupon_price" javaType="java.math.BigDecimal" jdbcType="DECIMAL"/>
      <arg column="is_used" javaType="java.lang.Byte" jdbcType="TINYINT"/>
      <arg column="used_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    coupon_id
    , coupon_price, is_used, used_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from shop_coupon
    where coupon_id = #{couponId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete
    from shop_coupon
    where coupon_id = #{couponId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.example.alvin.shop.order.model.ShopCoupon">
    insert into shop_coupon (coupon_id, coupon_price, is_used,
                             used_time)
    values (#{couponId,jdbcType=BIGINT}, #{couponPrice,jdbcType=DECIMAL},
            #{isUsed,jdbcType=TINYINT},
            #{usedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.example.alvin.shop.order.model.ShopCoupon">
    insert into shop_coupon
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="couponId != null">
        coupon_id,
      </if>
      <if test="couponPrice != null">
        coupon_price,
      </if>
      <if test="isUsed != null">
        is_used,
      </if>
      <if test="usedTime != null">
        used_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="couponId != null">
        #{couponId,jdbcType=BIGINT},
      </if>
      <if test="couponPrice != null">
        #{couponPrice,jdbcType=DECIMAL},
      </if>
      <if test="isUsed != null">
        #{isUsed,jdbcType=TINYINT},
      </if>
      <if test="usedTime != null">
        #{usedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective"
    parameterType="org.example.alvin.shop.order.model.ShopCoupon">
    update shop_coupon
    <set>
      <if test="couponPrice != null">
        coupon_price = #{couponPrice,jdbcType=DECIMAL},
      </if>
      <if test="isUsed != null">
        is_used = #{isUsed,jdbcType=TINYINT},
      </if>
      <if test="usedTime != null">
        used_time = #{usedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where coupon_id = #{couponId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.alvin.shop.order.model.ShopCoupon">
    update shop_coupon
    set coupon_price = #{couponPrice,jdbcType=DECIMAL},
        is_used      = #{isUsed,jdbcType=TINYINT},
        used_time    = #{usedTime,jdbcType=TIMESTAMP}
    where coupon_id = #{couponId,jdbcType=BIGINT}
  </update>
</mapper>